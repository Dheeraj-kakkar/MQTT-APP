/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: msg.proto */

#ifndef PROTOBUF_C_msg_2eproto__INCLUDED
#define PROTOBUF_C_msg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Mack Mack;


/* --- enums --- */


/* --- messages --- */

struct  _Mack
{
  ProtobufCMessage base;
  /*
   *increment counter
   */
  int32_t transactionid;
  char *ta_name;
  /*
   * 1
   */
  int32_t messagetype;
  protobuf_c_boolean has_test_duration;
  int32_t test_duration;
  protobuf_c_boolean has_result_duration;
  int32_t result_duration;
  char *binary_name;
  char *binary_argument_list;
  char *result;
  char *payload;
};
#define MACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mack__descriptor) \
    , 0, NULL, 0, 0,0, 0,0, NULL, NULL, NULL, NULL }


/* Mack methods */
void   mack__init
                     (Mack         *message);
size_t mack__get_packed_size
                     (const Mack   *message);
size_t mack__pack
                     (const Mack   *message,
                      uint8_t             *out);
size_t mack__pack_to_buffer
                     (const Mack   *message,
                      ProtobufCBuffer     *buffer);
Mack *
       mack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mack__free_unpacked
                     (Mack *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mack_Closure)
                 (const Mack *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mack__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_msg_2eproto__INCLUDED */
